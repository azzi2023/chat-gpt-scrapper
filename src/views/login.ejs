<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - AI Chat Interface</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #2563eb;
            --secondary-color: #1e40af;
            --background-color: #f8fafc;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --border-color: #e2e8f0;
            --error-color: #ef4444;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--background-color);
            color: var(--text-primary);
            line-height: 1.5;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .login-container {
            width: 100%;
            max-width: 400px;
            padding: 2rem;
            background-color: white;
            border-radius: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }

        .login-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .login-header h1 {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .login-header p {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

        .login-form {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .form-group label {
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--text-secondary);
        }

        .form-group input {
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: 0.5rem;
            font-size: 0.875rem;
            transition: all 0.2s;
        }

        .form-group input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);
        }

        .error-message {
            color: var(--error-color);
            font-size: 0.875rem;
            display: none;
        }

        .error-message.active {
            display: block;
        }

        .button {
            padding: 0.75rem;
            border: none;
            border-radius: 0.5rem;
            cursor: pointer;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.2s;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .button:disabled {
            opacity: 0.7;
            cursor: not-allowed;
        }

        .loader {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s linear infinite;
            margin-right: 8px;
        }

        .loader.active {
            display: inline-block;
        }

        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }

        .button-text {
            transition: opacity 0.2s;
        }

        .button.loading .button-text {
            opacity: 0;
        }

        .login-button {
            background-color: var(--primary-color);
            color: white;
        }

        .login-button:hover {
            background-color: var(--secondary-color);
        }

        .continue-button {
            background-color: transparent;
            color: var(--primary-color);
            border: 1px solid var(--primary-color);
        }

        .continue-button:hover {
            background-color: rgba(37, 99, 235, 0.1);
        }

        .divider {
            display: flex;
            align-items: center;
            text-align: center;
            margin: 1rem 0;
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

        .divider::before,
        .divider::after {
            content: '';
            flex: 1;
            border-bottom: 1px solid var(--border-color);
        }

        .divider span {
            padding: 0 1rem;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="login-header">
            <h1>Welcome to AI Chat</h1>
            <p>Login to access your account or continue without login</p>
        </div>
        <form class="login-form" id="loginForm">
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" placeholder="Enter your email" required>
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" placeholder="Enter your password" required>
            </div>
            <div class="error-message" id="errorMessage"></div>
            <button type="submit" class="button login-button" id="loginButton">
                <div class="loader" id="loginLoader"></div>
                <span class="button-text">Login</span>
            </button>
            <div class="divider">
                <span>or</span>
            </div>
            <button type="button" class="button continue-button" id="continueButton" onclick="continueWithoutLogin()">
                Continue without Login
            </button>
        </form>
    </div>

    <script>
        const loginForm = document.getElementById('loginForm');
        const errorMessage = document.getElementById('errorMessage');
        const loginButton = document.getElementById('loginButton');
        const loginLoader = document.getElementById('loginLoader');
        const continueButton = document.getElementById('continueButton');

        function setLoading(isLoading) {
            loginButton.disabled = isLoading;
            continueButton.disabled = isLoading;
            if (isLoading) {
                loginButton.classList.add('loading');
                loginLoader.classList.add('active');
            } else {
                loginButton.classList.remove('loading');
                loginLoader.classList.remove('active');
            }
        }

        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = document.getElementById('email').value.trim();
            const password = document.getElementById('password').value.trim();

            setLoading(true);
            errorMessage.classList.remove('active');

            try {
                const response = await fetch('/auth/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email, password }),
                });

                const data = await response.json();
                if (data.success) {
                    window.location.href = '/chat';
                } else {
                    errorMessage.textContent = data.error || 'Login failed. Please try again.';
                    errorMessage.classList.add('active');
                }
            } catch (err) {
                errorMessage.textContent = 'An error occurred. Please try again.';
                errorMessage.classList.add('active');
            } finally {
                setLoading(false);
            }
        });

        function continueWithoutLogin() {
            setLoading(true);
            window.location.href = '/chat';
        }
    </script>
</body>
</html> 